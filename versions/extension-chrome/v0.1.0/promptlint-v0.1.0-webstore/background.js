class n{contentScriptStatus=new Map;errorReports=[];extensionStats={totalActivations:0,successfulInitializations:0,errorCount:0,supportedSites:["ChatGPT","Claude"],version:"0.1.0"};constructor(){this.initializeEventListeners(),console.log("[PromptLint Background] Service worker initialized")}initializeEventListeners(){chrome.runtime.onInstalled.addListener(t=>{this.handleInstallation(t)}),chrome.runtime.onStartup.addListener(()=>{this.handleStartup()}),chrome.runtime.onMessage.addListener((t,e,o)=>(this.handleMessage(t,e,o),!0)),chrome.tabs.onUpdated.addListener((t,e,o)=>{this.handleTabUpdate(t,e,o)}),chrome.tabs.onRemoved.addListener(t=>{this.handleTabRemoved(t)}),chrome.action.onClicked.addListener(t=>{this.handleActionClick(t)})}handleInstallation(t){if(console.log("[PromptLint Background] Extension installed:",t.reason),t.reason==="install")this.showWelcomeNotification(),this.initializeExtensionData();else if(t.reason==="update"){const e=t.previousVersion;console.log(`[PromptLint Background] Updated from ${e} to ${this.extensionStats.version}`),this.handleExtensionUpdate(e)}}handleStartup(){console.log("[PromptLint Background] Extension startup"),this.extensionStats.totalActivations++,this.contentScriptStatus.clear()}handleMessage(t,e,o){const r=e.tab?.id;switch(t.type){case"CONTENT_SCRIPT_READY":this.handleContentScriptReady(t,e),o({success:!0});break;case"ERROR_REPORT":this.handleErrorReport(t.error,e),o({success:!0});break;case"GET_EXTENSION_STATUS":o(this.getExtensionStatus(r));break;case"GET_ERROR_STATS":o(this.getErrorStats(r));break;case"CLEAR_ERRORS":this.clearErrors(r),o({success:!0});break;case"REINJECT_CONTENT_SCRIPT":this.reinjectContentScript(r),o({success:!0});break;default:console.warn("[PromptLint Background] Unknown message type:",t.type),o({error:"Unknown message type"})}}handleContentScriptReady(t,e){const o=e.tab?.id;if(!o)return;const r={tabId:o,site:t.site,confidence:t.confidence,hasInputMonitor:t.hasInputMonitor,timestamp:Date.now(),url:e.tab?.url||""};this.contentScriptStatus.set(o,r),this.extensionStats.successfulInitializations++,console.log("[PromptLint Background] Content script ready:",r),this.updateExtensionBadge(o,r)}handleErrorReport(t,e){const o=e.tab?.id,r={...t,tabId:o,url:e.tab?.url};this.errorReports.push(r),this.extensionStats.errorCount++,this.errorReports.length>100&&this.errorReports.shift(),console.warn("[PromptLint Background] Error reported:",r),!t.recoverable&&o&&this.updateExtensionBadge(o,null,!0)}handleTabUpdate(t,e,o){e.url&&(this.contentScriptStatus.delete(t),this.clearExtensionBadge(t)),e.status==="complete"&&o.url&&this.isSupportedSite(o.url)&&console.log("[PromptLint Background] Navigated to supported site:",o.url)}handleTabRemoved(t){this.contentScriptStatus.delete(t),console.log("[PromptLint Background] Tab removed:",t)}handleActionClick(t){if(console.log("[PromptLint Background] Extension icon clicked for tab:",t.id),!t.id)return;!this.contentScriptStatus.get(t.id)&&t.url&&this.isSupportedSite(t.url)&&this.reinjectContentScript(t.id)}updateExtensionBadge(t,e,o=!1){if(o)chrome.action.setBadgeText({text:"!",tabId:t}),chrome.action.setBadgeBackgroundColor({color:"#ea4335",tabId:t}),chrome.action.setTitle({title:"PromptLint - Error occurred. Click to view details.",tabId:t});else if(e){const r=e.confidence>=.8?"âœ“":"~";chrome.action.setBadgeText({text:r,tabId:t}),chrome.action.setBadgeBackgroundColor({color:"#34a853",tabId:t}),chrome.action.setTitle({title:`PromptLint - Active on ${e.site}`,tabId:t})}else this.clearExtensionBadge(t)}clearExtensionBadge(t){chrome.action.setBadgeText({text:"",tabId:t}),chrome.action.setTitle({title:"PromptLint - AI Prompt Quality Assistant",tabId:t})}async reinjectContentScript(t){try{await chrome.scripting.executeScript({target:{tabId:t},files:["content-script.js"]}),console.log("[PromptLint Background] Content script reinjected for tab:",t)}catch(e){console.error("[PromptLint Background] Failed to reinject content script:",e)}}isSupportedSite(t){return["chat.openai.com","chatgpt.com","claude.ai","anthropic.com"].some(o=>t.includes(o))}getExtensionStatus(t){const e=t?this.contentScriptStatus.get(t):null;return{isActive:!!e,currentTab:e||null,stats:this.extensionStats,activeTabsCount:this.contentScriptStatus.size,supportedSites:this.extensionStats.supportedSites}}getErrorStats(t){const e=this.errorReports,o=t?e.filter(i=>i.tabId===t):e,r={};return o.forEach(i=>{r[i.type]=(r[i.type]||0)+1}),{totalErrors:o.length,errorsByType:r,recentErrors:o.slice(-10),recoverableErrors:o.filter(i=>i.recoverable).length}}clearErrors(t){t?this.errorReports=this.errorReports.filter(e=>e.tabId!==t):this.errorReports=[]}showWelcomeNotification(){console.log("[PromptLint Background] Welcome to PromptLint!")}initializeExtensionData(){this.extensionStats.totalActivations=1,console.log("[PromptLint Background] Extension data initialized")}handleExtensionUpdate(t){console.log(`[PromptLint Background] Extension updated from ${t}`)}}new n;
