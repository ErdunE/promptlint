class a{loadingOverlay;statusCard;statusIndicator;statusText;statusDetails;statusSite;statusConfidence;errorSection;errorList;currentTabId=null;constructor(){this.initializeElements(),this.attachEventListeners(),this.loadPopupData()}initializeElements(){this.loadingOverlay=this.getElement("loadingOverlay"),this.statusCard=this.getElement("statusCard"),this.statusIndicator=this.getElement("statusIndicator"),this.statusText=this.getElement("statusText"),this.statusDetails=this.getElement("statusDetails"),this.statusSite=this.getElement("statusSite"),this.statusConfidence=this.getElement("statusConfidence"),this.errorSection=this.getElement("errorSection"),this.errorList=this.getElement("errorList")}getElement(t){const e=document.getElementById(t);if(!e)throw new Error(`Element with id '${t}' not found`);return e}attachEventListeners(){this.getElement("refreshBtn").addEventListener("click",()=>{this.refreshData()}),this.getElement("clearErrorsBtn").addEventListener("click",()=>{this.clearErrors()}),this.getElement("reinjectBtn").addEventListener("click",()=>{this.reinjectContentScript()}),this.getElement("helpBtn").addEventListener("click",()=>{this.openHelpPage()}),this.getElement("feedbackLink").addEventListener("click",t=>{t.preventDefault(),this.openFeedbackPage()}),this.getElement("supportLink").addEventListener("click",t=>{t.preventDefault(),this.openSupportPage()})}async loadPopupData(){try{this.showLoading(!0);const t=await chrome.tabs.query({active:!0,currentWindow:!0});this.currentTabId=t[0]?.id||null,await Promise.all([this.loadExtensionStatus(),this.loadErrorStats()])}catch(t){console.error("[PromptLint Popup] Error loading data:",t),this.showError("Failed to load extension data")}finally{this.showLoading(!1)}}async loadExtensionStatus(){try{const t=await chrome.runtime.sendMessage({type:"GET_EXTENSION_STATUS"});this.updateStatusDisplay(t),this.updateStatsDisplay(t.stats)}catch(t){console.error("[PromptLint Popup] Error loading status:",t),this.showStatusError()}}async loadErrorStats(){try{const t=await chrome.runtime.sendMessage({type:"GET_ERROR_STATS"});this.updateErrorsDisplay(t)}catch(t){console.error("[PromptLint Popup] Error loading error stats:",t)}}updateStatusDisplay(t){const e=this.statusIndicator.querySelector(".status-dot");if(t.isActive&&t.currentTab)e.className="status-dot active",this.statusText.textContent="Active",this.statusSite.textContent=`Detected: ${t.currentTab.site}`,this.statusConfidence.textContent=`Confidence: ${Math.round(t.currentTab.confidence*100)}%`,this.statusCard.className="status-card success",t.currentTab.hasInputMonitor||(e.className="status-dot warning",this.statusText.textContent="Partially Active",this.statusConfidence.textContent+=" (Input monitoring disabled)",this.statusCard.className="status-card warning");else{const s=window.location.href;this.isSupportedSite(s)?(e.className="status-dot warning",this.statusText.textContent="Not Active",this.statusSite.textContent="Supported site detected",this.statusConfidence.textContent='Click "Retry" to activate',this.statusCard.className="status-card warning"):(e.className="status-dot",this.statusText.textContent="Inactive",this.statusSite.textContent="Navigate to ChatGPT or Claude",this.statusConfidence.textContent="",this.statusCard.className="status-card")}}updateStatsDisplay(t){this.getElement("totalActivations").textContent=t.totalActivations.toString(),this.getElement("successfulInits").textContent=t.successfulInitializations.toString(),this.getElement("errorCount").textContent=t.errorCount.toString(),this.getElement("activeTabsCount").textContent=t.activeTabsCount?.toString()||"0"}updateErrorsDisplay(t){if(t.totalErrors===0){this.errorSection.style.display="none";return}if(this.errorSection.style.display="block",this.errorList.innerHTML="",t.recentErrors.forEach(s=>{const r=document.createElement("div");r.className="error-item",r.innerHTML=`
        <div class="error-type">${this.formatErrorType(s.type)}</div>
        <div class="error-message">${s.message}</div>
      `,this.errorList.appendChild(r)}),t.totalErrors-t.recoverableErrors>0){const s=this.statusIndicator.querySelector(".status-dot");s.className="status-dot error",this.statusText.textContent="Error",this.statusCard.className="status-card error"}}formatErrorType(t){return t.replace(/_/g," ").toLowerCase().replace(/\b\w/g,e=>e.toUpperCase())}showStatusError(){const t=this.statusIndicator.querySelector(".status-dot");t.className="status-dot error",this.statusText.textContent="Error",this.statusSite.textContent="Failed to get extension status",this.statusConfidence.textContent="",this.statusCard.className="status-card error"}showLoading(t){this.loadingOverlay.style.display=t?"flex":"none"}showError(t){console.error("[PromptLint Popup] Error:",t)}async refreshData(){await this.loadPopupData()}async clearErrors(){try{await chrome.runtime.sendMessage({type:"CLEAR_ERRORS"}),this.errorSection.style.display="none",await this.loadErrorStats()}catch(t){console.error("[PromptLint Popup] Error clearing errors:",t)}}async reinjectContentScript(){try{if(!this.currentTabId)return;await chrome.runtime.sendMessage({type:"REINJECT_CONTENT_SCRIPT",tabId:this.currentTabId}),setTimeout(()=>this.refreshData(),1e3)}catch(t){console.error("[PromptLint Popup] Error reinjecting content script:",t)}}isSupportedSite(t){return["chat.openai.com","chatgpt.com","claude.ai","anthropic.com"].some(s=>t.includes(s))}openHelpPage(){chrome.tabs.create({url:"https://github.com/promptlint/promptlint#readme"}),window.close()}openFeedbackPage(){chrome.tabs.create({url:"https://github.com/promptlint/promptlint/issues/new"}),window.close()}openSupportPage(){chrome.tabs.create({url:"https://github.com/promptlint/promptlint/discussions"}),window.close()}}document.addEventListener("DOMContentLoaded",()=>{new a});document.addEventListener("visibilitychange",()=>{document.hidden||setTimeout(()=>{new a},100)});
